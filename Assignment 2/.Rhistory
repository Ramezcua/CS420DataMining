setwd("~/Dropbox/CS422 DM/Assignment 2")
spambase <- read.csv("./spambase/spambase.data", header=F, colClasses=c(rep('numeric',57), 'factor'))
# Naming the columns
names(spambase)<-c("word_freq_make",
"word_freq_address",
"word_freq_all",
"word_freq_3d",
"word_freq_our",
"word_freq_over",
"word_freq_remove",
"word_freq_internet",
"word_freq_order",
"word_freq_mail",
"word_freq_receive",
"word_freq_will",
"word_freq_people",
"word_freq_report",
"word_freq_addresses",
"word_freq_free",
"word_freq_business",
"word_freq_email",
"word_freq_you",
"word_freq_credit",
"word_freq_your",
"word_freq_font",
"word_freq_000",
"word_freq_money",
"word_freq_hp",
"word_freq_hpl",
"word_freq_george",
"word_freq_650",
"word_freq_lab",
"word_freq_labs",
"word_freq_telnet",
"word_freq_857",
"word_freq_data",
"word_freq_415",
"word_freq_85",
"word_freq_technology",
"word_freq_1999",
"word_freq_parts",
"word_freq_pm",
"word_freq_direct",
"word_freq_cs",
"word_freq_meeting",
"word_freq_original",
"word_freq_project",
"word_freq_re",
"word_freq_edu",
"word_freq_table",
"word_freq_conference",
"char_freq_sem_col",
"char_freq_c_par",
"char_freq_s_par",
"char_freq_exc_mrk",
"char_freq_dollar_sgn",
"char_freq_hash_sgn",
"capital_run_length_average",
"capital_run_length_longest",
"capital_run_length_total",
"spam")
# Converting 0 and 1 in spam column to not_spam and spam (better labels)
spambase$spam <- ifelse(spambase$spam == 0, c("not_spam"), c("spam"))
# Getting the samples of 80% for traning and 20% for testing
i <- sample(2, nrow(spambase), replace = T, prob = c(0.8, 0.2))
trainSet <- spambase[i==1,]
testSet <- spambase[i==2,]
library('rpart')
spamFormula <- spam ~ word_freq_make+
word_freq_address+
word_freq_all+
word_freq_3d+
word_freq_our+
word_freq_over+
word_freq_remove+
word_freq_internet+
word_freq_order+
word_freq_mail+
word_freq_receive+
word_freq_will+
word_freq_people+
word_freq_report+
word_freq_addresses+
word_freq_free+
word_freq_business+
word_freq_email+
word_freq_you+
word_freq_credit+
word_freq_your+
word_freq_font+
word_freq_000+
word_freq_money+
word_freq_hp+
word_freq_hpl+
word_freq_george+
word_freq_650+
word_freq_lab+
word_freq_labs+
word_freq_telnet+
word_freq_857+
word_freq_data+
word_freq_415+
word_freq_85+
word_freq_technology+
word_freq_1999+
word_freq_parts+
word_freq_pm+
word_freq_direct+
word_freq_cs+
word_freq_meeting+
word_freq_original+
word_freq_project+
word_freq_re+
word_freq_edu+
word_freq_table+
word_freq_conference+
char_freq_sem_col+
char_freq_c_par+
char_freq_s_par+
char_freq_exc_mrk+
char_freq_dollar_sgn+
char_freq_hash_sgn+
capital_run_length_average+
capital_run_length_longest+
capital_run_length_total
spam_rpart <- rpart(spamFormula, data = trainSet)
#print(spam_rpart)
#library(rpart.plot)
#prp(spam_rpart)
#prp(spam_rpart, type =2)
#plotcp(spam_rpart)
#printcp(spam_rpart)
#Confusion Matrix for prediction on Training Set
predTrain <- predict(spam_rpart, newdata=trainSet, type="class")
confMatTrain <- table(trainSet$spam, predTrain)
print(confMatTrain)
#Confusion Matrix for prediction on Testing Set
predTest <- predict(spam_rpart, newdata=testSet, type="class")
confMatTest <- table(testSet$spam, predTest)
print(confMatTest)
#Tree Pruning
spam_rpartPrune <- prune(spam_rpart, cp=0.02) #0.02 removed three branches
#Confusion Matrix for predion on Training Set using a pruned tree
predTrainPrune <- predict(spam_rpartPrune, newdata=trainSet, type="class")
confMatTrainPrune <- table(trainSet$spam, predTrainPrune)
print(confMatTrainPrune)
plotcp(spam_rpart)
spam_rpartPrune <- prune(spam_rpart, cp=0.3)
plotcp(spam_rpartPrune)
library(rpart.plot)
prp(rpart.plot)
prp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.2)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.1)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.05)
plotcp(spam_rpartPrune)
plotcp(spam_rpart)
spam_rpartPrune <- prune(spam_rpart, cp=0.014)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.015)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.016)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.018)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.02)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.022)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.025)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.030)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.04)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.055)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.060)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.07)
plotcp(spam_rpartPrune)
spam_rpartPrune <- prune(spam_rpart, cp=0.067)
plotcp(spam_rpartPrune)
plotcp(spam_rpart)
spam_rpartPrune <- prune(spam_rpart, cp=0.017)
plotcp(spam_rpartPrune)
prp(spam_rpartPrune)
prp(spam_rpart)
prp(spam_rpart, type =2)
prp(spam_rpart, type =2, extra = 3)
prp(spam_rpart, type =2, extra = 1)
prp(spam_rpart, type =2, extra = 4)
prp(spam_rpart, type =2, extra = 2)
prp(spam_rpart, type =2, extra = 3)
prp(spam_rpart, type =2, extra = 4)
prp(spam_rpart, type =2, extra = 5)
prp(spam_rpart, type =2, extra = 3)
prp(spam_rpart, type =2, extra = 4)
prp(spam_rpart, type =2, extra = 4, main = "Spam Decision Tree")
prp(spam_rpartPruned, type =2, extra = 4, main = "Spam Pruned Decision Tree")
prp(spam_rpartPrune, type =2, extra = 4, main = "Spam Pruned Decision Tree")
# Confusion Matrix for prediction on Training Set
predTrain <- predict(spam_rpart, newdata=trainSet, type="class")
confMatTrain <- table(trainSet$spam, predTrain)
print(confMatTrain)
# Confusion Matrix for prediction on Testing Set
predTest <- predict(spam_rpart, newdata=testSet, type="class")
confMatTest <- table(testSet$spam, predTest)
print(confMatTest)
# Confusion Matrix for prediction on Training Set using a pruned tree
predTrainPrune <- predict(spam_rpartPrune, newdata=trainSet, type="class")
confMatTrainPrune <- table(trainSet$spam, predTrainPrune)
print(confMatTrainPrune)
# Confusion Matrix for prediction on Testing Set using a pruned tree
predTestPrune <- predict(spam_rpartPrune, newdata=testSet, type="class")
confMatTestPrune <- table(testSet$spam, predTrainPrune)
print(confMatTestPrune)
# Confusion Matrix for prediction on Training Set
predTrain <- predict(spam_rpart, newdata=trainSet, type="class")
confMatTrain <- table(trainSet$spam, predTrain)
print(confMatTrain)
# Confusion Matrix for prediction on Testing Set
predTest <- predict(spam_rpart, newdata=testSet, type="class")
confMatTest <- table(testSet$spam, predTest)
print(confMatTest)
# Confusion Matrix for prediction on Training Set using a pruned tree
predTrainPrune <- predict(spam_rpartPrune, newdata=trainSet, type="class")
confMatTrainPrune <- table(trainSet$spam, predTrainPrune)
print(confMatTrainPrune)
# Confusion Matrix for prediction on Testing Set using a pruned tree
predTestPrune <- predict(spam_rpartPrune, newdata=testSet, type="class")
confMatTestPrune <- table(testSet$spam, predTestPrune)
print(confMatTestPrune)
# Confusion Matrix for prediction on Training Set
predTrain <- predict(spam_rpart, newdata=trainSet, type="class")
confMatTrain <- table(trainSet$spam, predTrain)
sink("./data/prediction_trainingSet.txt", split=T)
print(confMatTrain)
sink()
# Confusion Matrix for prediction on Testing Set
predTest <- predict(spam_rpart, newdata=testSet, type="class")
confMatTest <- table(testSet$spam, predTest)
sink("./data/prediction_testingSet.txt", split=T)
print(confMatTest)
sink()
# Confusion Matrix for prediction on Training Set using a pruned tree
predTrainPrune <- predict(spam_rpartPrune, newdata=trainSet, type="class")
confMatTrainPrune <- table(trainSet$spam, predTrainPrune)
sink("./data/prediction_trainingSet_pruned.txt", split=T)
print(confMatTrainPrune)
sink()
# Confusion Matrix for prediction on Testing Set using a pruned tree
predTestPrune <- predict(spam_rpartPrune, newdata=testSet, type="class")
confMatTestPrune <- table(testSet$spam, predTestPrune)
sink("./data/prediction_testingSet_pruned.txt", split=T)
print(confMatTestPrune)
sink()
# Confusion Matrix for prediction on Training Set
predTrain <- predict(spam_rpart, newdata=trainSet, type="class")
confMatTrain <- table(trainSet$spam, predTrain)
sink("./data/prediction_trainingSet.txt", split=T)
print(confMatTrain)
sink()
# Confusion Matrix for prediction on Testing Set
predTest <- predict(spam_rpart, newdata=testSet, type="class")
confMatTest <- table(testSet$spam, predTest)
sink("./data/prediction_testingSet.txt", split=T)
print(confMatTest)
sink()
# Confusion Matrix for prediction on Training Set using a pruned tree
predTrainPrune <- predict(spam_rpartPrune, newdata=trainSet, type="class")
confMatTrainPrune <- table(trainSet$spam, predTrainPrune)
sink("./data/prediction_trainingSet_pruned.txt", split=T)
print(confMatTrainPrune)
sink()
# Confusion Matrix for prediction on Testing Set using a pruned tree
predTestPrune <- predict(spam_rpartPrune, newdata=testSet, type="class")
confMatTestPrune <- table(testSet$spam, predTestPrune)
sink("./data/prediction_testingSet_pruned.txt", split=T)
print(confMatTestPrune)
sink()
spam_rpartPrune <- prune(spam_rpart, cp=0.017, main = "Error of Decision Tree") #0.017 removed three branches
spam_rpartPrune <- prune(spam_rpart, cp=0.017, main = "Error of Decision Tree") #0.017 removed three branches
spam_rpartPrune <- prune(spam_rpart, cp=0.017) #0.017 removed three branches
plotcp(spam_rpart, main = "Spam Error Plot")
prp(spam_rpart, type =2, extra = 4)
plotcp(spam_rpart)
